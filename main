 using System;


class MainClass
{
    public static void Main()
    {
        Console.WriteLine("Enter array's length: ");
        UnoDimensional uno = new UnoDimensional(int.Parse(Console.ReadLine()));
        Console.WriteLine(UnoDimensional.middleValue());
    }
}


class UnoDimensional
{
    private int length;
    private int[] array;

    public UnoDimensional(int length, bool choice = false)
    {
        array = new int[length];
        if  (!choice)
        {
            Random rand = new Random();
            for (int i = 0; i < length; i++)    
            {
                array[i] = rand.Next(-1024, 1024);
            }
        }
        else
        {
            for (int i = 0; i < length; i++)    
            {
                array[i] = int.Parse(Console.ReadLine());
            }
        }
    }

    public static int middleValueUno()
    {
        int counter = 0;
        for (int i = 0; i < array.Length; i++)
        {
            counter += array[i];
        }
        return counter / array.Length;
    }

    public static void GetRidofValue(int[] array)
    {
        int counter = 0;
        for (int i = 0; i < array.Length; i++)
        {
            if (Math.Abs(array[i]) < 100)
            {
                counter += 1;
            }
        }
        int[] newArr = new int[counter];
        int j = 0;
        for (int i = 0; i < array.Length; i++)
        {
            if (Math.Abs(array[i]) < 100)
            {
                newArr[j] = array[i];
                j++;
            }
        }
        foreach (var item in newArr)
        {
            Console.WriteLine(item);
        }
    }

}

class DosDimensional
{
    private int leinght, height;
    private int[,] array;

    public DosDimensional(int leinght, height, bool choice = false)
    {
        if (!choice)
        {
            Random rand = new Random(); 
            for (int i = 0; i < height; i++)
            {
                for (int i = 0; j < length; i++)
                {
                    array[i,j] = rand.Next(-1024, 1024);
                }
            }
        }
        else
        {
            for (int i = 0; i < height; i++)
            {
                for (int i = 0; j < length; i++)
                {
                    array[i,j] = int.Parse(Console.ReadLine());
                }
            }
        }
    }

    public static int middleValueDos()
    {
        counter = 0;
        for (int i = 0; i < height; i++)
        {
            for (int i = 0; j < length; i++)
            {
                counter += array[i, j];
            }
        }
        return counter / array.Length;
    }

    public static int matrixValueDos()
    {
        
        {
        for(int i = 0; i &lt; arr.GetLength(0); i++)
        {
        for(int j = 0; j &lt; arr.GetLength(1); j++)
        {
        Console.Write(arr[i,j]+&quot; &quot;);
        }
        Console.Write(&quot;\n&quot;);
        }
        }
    }
}
